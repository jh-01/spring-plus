plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'

    // Kotlin
//    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
//    id 'org.jetbrains.kotlin.plugin.lombok' version '2.0.0'
//    id 'org.jetbrains.kotlin.plugin.spring' version '2.0.0'
//    id 'org.jetbrains.kotlin.plugin.jpa' version '2.0.0'
//    id 'org.jetbrains.kotlin.kapt' version '2.0.0'
    id 'org.jetbrains.kotlin.jvm' version '1.9.24'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.24'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.24'
    id 'org.jetbrains.kotlin.plugin.lombok' version '1.9.24'
    id 'org.jetbrains.kotlin.kapt' version '1.9.24'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // DB
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    // Bcrypt
    implementation 'at.favre.lib:bcrypt:0.10.2'

    // JWT
    compileOnly 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // QueryDSL (Kotlin + kapt only)
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    kapt "com.querydsl:querydsl-apt:5.0.0:jakarta"
    kapt "jakarta.annotation:jakarta.annotation-api"
    kapt "jakarta.persistence:jakarta.persistence-api"
}

kapt {
    keepJavacAnnotationProcessors = true
    includeCompileClasspath = false
}

// QueryDSL Q파일 경로 설정
def querydslDir = "$buildDir/generated/source/querydsl"
sourceSets.main.java.srcDirs += querydslDir

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean {
    delete file(querydslDir)
}

// Jandex (Hibernate 캐시 관련)
configurations.all {
    resolutionStrategy {
        force 'org.jboss:jandex:3.1.2'
    }
}

// Kotlin all-open
allOpen {
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.Embeddable")
    annotation("jakarta.persistence.MappedSuperclass")
}

// Test 설정
tasks.named('test') {
    useJUnitPlatform()
}
